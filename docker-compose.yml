version: "3.8"

services:
  mongo:
    image: mongo
    container_name: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    ports:
      - "27017:27017"
    volumes:
      - blog:/data/blogdata

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    restart: always
    environment:
      ME_CONFIG_MONGODB_URL: mongodb://root:root@mongo:27017/?authSource=admin
      ME_CONFIG_BASICAUTH_USERNAME: mexpress
      ME_CONFIG_BASICAUTH_PASSWORD: mexpress
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: root
    ports:
      - "8081:8081"
    depends_on:
      - mongo
    healthcheck:
      test: ["CMD", "nc", "-z", "mongo", "27017"]
      interval: 30s
      timeout: 10s
      retries: 5
  # neo4j:
  #   image: neo4j
  #   container_name: neo4j
  #   restart: always
  #   environment:
  #     NEO4J_AUTH: neo4j/streams
  #   ports:
  #     - "7474:7474"
  #     - "7687:7687"
  #   volumes:
  #     - neo4jdata:/data

  blog_backend_app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: blog_node
    restart: always
    ports:
      - "3000:3000"
    depends_on:
      - mongo
    volumes:
      - ./:/app
  # redis-service:
  #   image: redis:latest
  #   restart: always
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - /path/to/local/d–∞ta:/root/redis
  #     - /path/to/local/redis.conf:/usr/local/etc/redis/redis.conf
  #   environment:
  #     - REDIS_PASSWORD=my-password
  #     - REDIS_PORT=6379
  #     - REDIS_DATABASES=16

volumes:
  blog:
  neo4jdata:
